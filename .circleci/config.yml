version: 2.1

jobs:
  build-app:
    
    working_directory: ~/Final-Year-Frontend
    docker:
      #create docker image
      - image: circleci/node:10-browsers
    steps:
      - checkout
      - restore_cache:
          key: Final-Year-Frontend-{{ .Branch }}-{{checksum "package-lock.json"}}
      - run: npm install
      - run: 
          name: "check Node.js version"
          command: node -v
      #save the node modules for use in both
      - save_cache:
          key: Final-Year-Frontend-{{ .Branch }}-{{checksum "package-lock.json"}}
          paths:
            - "node_modules"

  build-functions:
    working_directory: ~/Final-Year-Frontend/functions
    docker:
    #create docker image
      - image: circleci/node:10-browsers
    steps:
      - checkout
      - restore_cache:
          key: Final-Year-Frontend-Functions-{{ .Branch }}-{{checksum "package-lock.json"}}
      
      - run: npm install
      - save_cache:
          key: Final-Year-Frontend-Functions-{{ .Branch }}-{{checksum "package-lock.json"}}
          paths:
            - "node_modules"

  test:
      
    working_directory: ~/Final-Year-Frontend
    docker:
      #create docker image
      - image: circleci/node:10-browsers

    steps:
      - checkout

      - restore_cache:
          key: Final-Year-Frontend-{{ .Branch }}-{{checksum "package-lock.json"}}

      - run: npm run test -- --watch=false --progress=false --browsers=ChromeHeadlessCI
      - store_test_results:
          path: test-results


      - run: npm run e2e -- --protractor-config=./e2e/protractor-ci.conf.js

  deploy-hosting:
      
    working_directory: ~/Final-Year-Frontend
    docker:
    #create docker image
    - image: circleci/node:10-browsers

    steps:
      - checkout 
      - restore_cache:
          keys:
            - Final-Year-Frontend-{{ .Branch }}-{{checksum "package-lock.json"}}
            - Final-Year-Frontend-Functions-{{ .Branch }}-{{checksum "package-lock.json"}}

      - run:
          name: 'Build Project'
          command: 'npm run build'
      - run:
          name: 'Deploy to Firebase Hosting'
          command: './node_modules/.bin/firebase deploy --only hosting --token=$FIREBASE_TOKEN'

  deploy-functions:
    
    working_directory: ~/Final-Year-Frontend/functions
    docker:
    #create docker image
    - image: circleci/node:10-browsers
    
    steps:
      - checkout:
          path: ~/Final-Year-Frontend
      - restore_cache:
          keys: 
            - Final-Year-Frontend-Functions-{{ .Branch }}-{{checksum "package-lock.json"}}
            - Final-Year-Frontend-{{ .Branch }}-{{checksum "package-lock.json"}}
        
      - run:
          name: 'Deploy Firebase Functions'
          command: './node_modules/.bin/firebase deploy --only functions --token=$FIREBASE_TOKEN'

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - build-app:
          filters:
            branches:
              only: master 
          context: final-year
      - build-functions:
          requires:
            - build-app
          context: final-year
      - deploy-hosting:
          context: final-year
      - deploy-functions:
          context: final-year
